<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="27" passed="27">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="31" started-at="2013-08-11T06:01:19Z" finished-at="2013-08-11T06:01:19Z">
    <groups>
      <group name="unit">
        <method signature="ChessBoardTest.testCanVisitReturnsFalse()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testCanVisitReturnsFalse" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testCanVisitReturnsTrue()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testCanVisitReturnsTrue" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testChessBoardCareationWithLocation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCareationWithLocation" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testChessBoardCareationWithNullLocation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCareationWithNullLocation" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testChessBoardCreationNegative()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCreationNegative" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testChessBoardCreationZeroSize()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCreationZeroSize" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testChessBoardSimpleCreation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardSimpleCreation" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testIsValidReturnsFalse()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testIsValidReturnsFalse" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testIsValidReturnsTrue()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testIsValidReturnsTrue" class="rationale.emotions.ChessBoardTest"/>
        <method signature="ChessBoardTest.testMarkAsNotVisited()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testMarkAsNotVisited" class="rationale.emotions.ChessBoardTest"/>
        <method signature="CmdLineOptionsParserTest.testGetParamValue()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValue" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testGetParamValueArgNotPresent()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueArgNotPresent" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testGetParamValueInvalidArg()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueInvalidArg" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testGetParamValueNoHashSymbol()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueNoHashSymbol" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testIsParamPresent()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresent" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testIsParamPresentNegative()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresentNegative" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="CmdLineOptionsParserTest.testIsParamPresentNoHashSymbol()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresentNoHashSymbol" class="rationale.emotions.internal.CmdLineOptionsParserTest"/>
        <method signature="LocationTest.testEquals()[pri:0, instance:rationale.emotions.pojo.LocationTest@193bf6c8]" name="testEquals" class="rationale.emotions.pojo.LocationTest"/>
        <method signature="LocationTest.testGetXandY()[pri:0, instance:rationale.emotions.pojo.LocationTest@193bf6c8]" name="testGetXandY" class="rationale.emotions.pojo.LocationTest"/>
      </group> <!-- unit -->
      <group name="functional">
        <method signature="KnightTest.moveToTestNegative()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="moveToTestNegative" class="rationale.emotions.chesspawn.impl.KnightTest"/>
        <method signature="KnightTest.testMoveTo()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testMoveTo" class="rationale.emotions.chesspawn.impl.KnightTest"/>
        <method signature="KnightTest.testMoveToOutOfBoardScenario()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testMoveToOutOfBoardScenario" class="rationale.emotions.chesspawn.impl.KnightTest"/>
        <method signature="KnightTest.testNextMoveLocations()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testNextMoveLocations" class="rationale.emotions.chesspawn.impl.KnightTest"/>
        <method signature="KnightTest.testNextMoveLocationsNull()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testNextMoveLocationsNull" class="rationale.emotions.chesspawn.impl.KnightTest"/>
        <method signature="PawnMoveManagerTest.testLookForSolution()[pri:0, instance:rationale.emotions.PawnMoveManagerTest@2fc6d169]" name="testLookForSolution" class="rationale.emotions.PawnMoveManagerTest"/>
        <method signature="PawnMoveManagerTest.testLookForSolutionNegative()[pri:0, instance:rationale.emotions.PawnMoveManagerTest@2fc6d169]" name="testLookForSolutionNegative" class="rationale.emotions.PawnMoveManagerTest"/>
      </group> <!-- functional -->
    </groups>
    <test name="Test" duration-ms="31" started-at="2013-08-11T06:01:19Z" finished-at="2013-08-11T06:01:19Z">
      <class name="rationale.emotions.pojo.ChessBoardLocationTest">
        <test-method status="PASS" signature="testCreation()[pri:0, instance:rationale.emotions.pojo.ChessBoardLocationTest@29abbe6c]" name="testCreation" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreation -->
      </class> <!-- rationale.emotions.pojo.ChessBoardLocationTest -->
      <class name="rationale.emotions.ChessBoardTest">
        <test-method status="PASS" signature="testChessBoardCareationWithNullLocation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCareationWithNullLocation" duration-ms="7" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The location that determines success condition cannot be null (or) negative.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The location that determines success condition cannot be null (or) negative.
	at rationale.emotions.ChessBoard.<init>(ChessBoard.java:51)
	at rationale.emotions.ChessBoardTest.testChessBoardCareationWithNullLocation(ChessBoardTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChessBoardCareationWithNullLocation -->
        <test-method status="PASS" signature="testChessBoardCreationNegative()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCreationNegative" duration-ms="7" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The size of the chess board cannot be negative or zero.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The size of the chess board cannot be negative or zero.
	at rationale.emotions.ChessBoard.<init>(ChessBoard.java:48)
	at rationale.emotions.ChessBoard.<init>(ChessBoard.java:39)
	at rationale.emotions.ChessBoardTest.testChessBoardCreationNegative(ChessBoardTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChessBoardCreationNegative -->
        <test-method status="PASS" signature="testCanVisitReturnsTrue()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testCanVisitReturnsTrue" duration-ms="9" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCanVisitReturnsTrue -->
        <test-method status="PASS" signature="testChessBoardCareationWithLocation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCareationWithLocation" duration-ms="9" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChessBoardCareationWithLocation -->
        <test-method status="PASS" signature="testCanVisitReturnsFalse()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testCanVisitReturnsFalse" duration-ms="9" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCanVisitReturnsFalse -->
        <test-method status="PASS" signature="testChessBoardCreationZeroSize()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardCreationZeroSize" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The size of the chess board cannot be negative or zero.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The size of the chess board cannot be negative or zero.
	at rationale.emotions.ChessBoard.<init>(ChessBoard.java:48)
	at rationale.emotions.ChessBoard.<init>(ChessBoard.java:39)
	at rationale.emotions.ChessBoardTest.testChessBoardCreationZeroSize(ChessBoardTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChessBoardCreationZeroSize -->
        <test-method status="PASS" signature="testChessBoardSimpleCreation()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testChessBoardSimpleCreation" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChessBoardSimpleCreation -->
        <test-method status="PASS" signature="testIsValidReturnsFalse()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testIsValidReturnsFalse" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidReturnsFalse -->
        <test-method status="PASS" signature="testMarkAsNotVisited()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testMarkAsNotVisited" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkAsNotVisited -->
        <test-method status="PASS" signature="testIsValidReturnsTrue()[pri:0, instance:rationale.emotions.ChessBoardTest@63c4fb04]" name="testIsValidReturnsTrue" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidReturnsTrue -->
      </class> <!-- rationale.emotions.ChessBoardTest -->
      <class name="rationale.emotions.PawnMoveManagerTest">
        <test-method status="PASS" signature="testLookForSolutionNegative()[pri:0, instance:rationale.emotions.PawnMoveManagerTest@2fc6d169]" name="testLookForSolutionNegative" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLookForSolutionNegative -->
        <test-method status="PASS" signature="testLookForSolution()[pri:0, instance:rationale.emotions.PawnMoveManagerTest@2fc6d169]" name="testLookForSolution" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLookForSolution -->
      </class> <!-- rationale.emotions.PawnMoveManagerTest -->
      <class name="rationale.emotions.internal.CmdLineOptionsParserTest">
        <test-method status="PASS" signature="testGetParamValue()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValue" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetParamValue -->
        <test-method status="PASS" signature="testGetParamValueInvalidArg()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueInvalidArg" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[#bar was not provided at all.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: #bar was not provided at all.
	at rationale.emotions.internal.CmdLineOptionsParser.getParamValue(CmdLineOptionsParser.java:58)
	at rationale.emotions.internal.CmdLineOptionsParserTest.testGetParamValueInvalidArg(CmdLineOptionsParserTest.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetParamValueInvalidArg -->
        <test-method status="PASS" signature="testGetParamValueArgNotPresent()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueArgNotPresent" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[#foo was specified but no value specified for it.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: #foo was specified but no value specified for it.
	at rationale.emotions.internal.CmdLineOptionsParser.getParamValue(CmdLineOptionsParser.java:69)
	at rationale.emotions.internal.CmdLineOptionsParserTest.testGetParamValueArgNotPresent(CmdLineOptionsParserTest.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetParamValueArgNotPresent -->
        <test-method status="PASS" signature="testGetParamValueNoHashSymbol()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testGetParamValueNoHashSymbol" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[foo doesn't begin with a '#' symbol.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: foo doesn't begin with a '#' symbol.
	at rationale.emotions.internal.CmdLineOptionsParser.getParamValue(CmdLineOptionsParser.java:48)
	at rationale.emotions.internal.CmdLineOptionsParserTest.testGetParamValueNoHashSymbol(CmdLineOptionsParserTest.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetParamValueNoHashSymbol -->
        <test-method status="PASS" signature="testIsParamPresent()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresent" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsParamPresent -->
        <test-method status="PASS" signature="testIsParamPresentNegative()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresentNegative" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsParamPresentNegative -->
        <test-method status="PASS" signature="testIsParamPresentNoHashSymbol()[pri:0, instance:rationale.emotions.internal.CmdLineOptionsParserTest@31ce069f]" name="testIsParamPresentNoHashSymbol" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[foo doesn't begin with a '#' symbol.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: foo doesn't begin with a '#' symbol.
	at rationale.emotions.internal.CmdLineOptionsParser.isParamPresent(CmdLineOptionsParser.java:23)
	at rationale.emotions.internal.CmdLineOptionsParserTest.testIsParamPresentNoHashSymbol(CmdLineOptionsParserTest.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:724)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsParamPresentNoHashSymbol -->
      </class> <!-- rationale.emotions.internal.CmdLineOptionsParserTest -->
      <class name="rationale.emotions.chesspawn.impl.KnightTest">
        <test-method status="PASS" signature="testMoveToOutOfBoardScenario()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testMoveToOutOfBoardScenario" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveToOutOfBoardScenario -->
        <test-method status="PASS" signature="moveToTestNegative()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="moveToTestNegative" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moveToTestNegative -->
        <test-method status="PASS" signature="testMoveTo()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testMoveTo" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoveTo -->
        <test-method status="PASS" signature="testNextMoveLocations()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testNextMoveLocations" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextMoveLocations -->
        <test-method status="PASS" signature="testNextMoveLocationsNull()[pri:0, instance:rationale.emotions.chesspawn.impl.KnightTest@25de5d00]" name="testNextMoveLocationsNull" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextMoveLocationsNull -->
      </class> <!-- rationale.emotions.chesspawn.impl.KnightTest -->
      <class name="rationale.emotions.pojo.LocationTest">
        <test-method status="PASS" signature="testGetXandY()[pri:0, instance:rationale.emotions.pojo.LocationTest@193bf6c8]" name="testGetXandY" duration-ms="1" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetXandY -->
        <test-method status="PASS" signature="testEquals()[pri:0, instance:rationale.emotions.pojo.LocationTest@193bf6c8]" name="testEquals" duration-ms="0" started-at="2013-08-11T11:31:19Z" finished-at="2013-08-11T11:31:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
      </class> <!-- rationale.emotions.pojo.LocationTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
